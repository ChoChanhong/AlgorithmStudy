package JUNGOL_2577_회전초밥;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solution {
	
	static int N, d, k, c, count, max;
	static int[] src;
	static int[] select = new int[3001]; // 0 dummy select[3] = 2; // 3 번 종류 (가지수) 2개있다.
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		// 2≤N≤3,000,000, 2≤d≤3,000, 2≤k≤3,000 (k≤N), 1≤c≤d
		N = Integer.parseInt(st.nextToken()); // 접시의 수
		d = Integer.parseInt(st.nextToken()); // 초밥의 가지수
		k = Integer.parseInt(st.nextToken()); // 연속접시의 수
		c = Integer.parseInt(st.nextToken()); // 쿠폰 번호

		src = new int[N];
		for (int i = 0; i < N; i++) {
			src[i] = Integer.parseInt(br.readLine());
		}
		
		// 쿠폰으로 주어진 것을 먼저 처리
		select[c] = 1;
		count = 1; // 가장 큰 경우 => 답
		
		// 처음 k개를 선택 ( 0 - k-1 )
		for (int i = 0; i < k; i++) {
			if( select[ src[i] ] == 0 ) count++;
			select[ src[i] ]++;
		}
		
		max = count;
		
		for (int i = k; i < N + k - 1; i++) {
			// 맨 앞 접시
			int dish = src[i-k];
			
			select[dish]--; // 맨앞 접시 종류 취소
			if( select[dish] == 0 ) count--; // 취소했더니 0이면 가짓수도 줄어야
			
			if( i < N ) {
				dish = src[i];
			}else {
				dish = src[i - N];
			}
			
			if( select[ dish ] == 0 ) count++;
			select[ dish ]++;
			
			max = Math.max(max, count);
		}
		
		System.out.println(max);
	}

}
