package BJ_2606_바이러스;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main_adjList {
	static int V; // 정점
	static int E; // 간선
	static int ans = 0;

	static ArrayList<Integer>[] adjlist;
	static boolean[] isVisited; // 방문 체크

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		V = Integer.parseInt(br.readLine());
		E = Integer.parseInt(br.readLine());

		adjlist = new ArrayList[V + 1]; // 0은 더미
		isVisited = new boolean[V + 1]; // 0은 더미

		// 인접 리스트 초기화
		for (int i = 1; i <= V; i++) {
			adjlist[i] = new ArrayList<Integer>();
		}

		for (int i = 1; i <= E; i++) {
			st = new StringTokenizer(br.readLine());

			int from = Integer.parseInt(st.nextToken());
			int to = Integer.parseInt(st.nextToken());

			adjlist[from].add(to);
			adjlist[to].add(from);
		}

		bfs(1);
		System.out.println("bfs >> " + ans);
		
		ans = 0;
		Arrays.fill(isVisited, false);
		
		dfs(1);
		System.out.println("dfs >> " + ans);
	}

	static Queue<Integer> queue = new ArrayDeque<>();
	static void bfs(int v) {

		queue.offer(v);
		isVisited[v] = true;

		while (!queue.isEmpty()) {
			int tmp = queue.poll();

			for (int n : adjlist[tmp]) {
				if (isVisited[n])
					continue;

				ans++;
				queue.offer(n);
				isVisited[n] = true;
			}

		}

	}
	
	static void dfs(int v) {
		isVisited[v] = true;

		for (int n : adjlist[v]) {
			if (isVisited[n]) continue;
			
			ans++;
			dfs(n);
		}
	}
}
